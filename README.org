* flyspell-correct

[[https://github.com/syl20bnr/spacemacs][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]] [[CircleCI][file:https://circleci.com/gh/d12frosted/flyspell-correct.svg?style=svg]]

| =flyspell-correct=       | [[http://melpa.org/#/flyspell-correct][file:http://melpa.org/packages/flyspell-correct-badge.svg]]       | [[https://stable.melpa.org/#/flyspell-correct][file:https://stable.melpa.org/packages/flyspell-correct-badge.svg]]       |
| =flyspell-correct-ivy=   | [[http://melpa.org/#/flyspell-correct-ivy][file:http://melpa.org/packages/flyspell-correct-ivy-badge.svg]]   | [[https://stable.melpa.org/#/flyspell-correct-ivy][file:https://stable.melpa.org/packages/flyspell-correct-ivy-badge.svg]]   |
| =flyspell-correct-helm=  | [[http://melpa.org/#/flyspell-correct-helm][file:http://melpa.org/packages/flyspell-correct-helm-badge.svg]]  | [[https://stable.melpa.org/#/flyspell-correct-helm][file:https://stable.melpa.org/packages/flyspell-correct-helm-badge.svg]]  |
| =flyspell-correct-popup= | [[http://melpa.org/#/flyspell-correct-popup][file:http://melpa.org/packages/flyspell-correct-popup-badge.svg]] | [[https://stable.melpa.org/#/flyspell-correct-popup][file:https://stable.melpa.org/packages/flyspell-correct-popup-badge.svg]] |

Correcting words with flyspell via custom interface.

[[https://d12frosted.io/posts/2016-05-09-flyspell-correct-intro.html][Read intro post]]

This package provides functionality for correcting words via custom interfaces.
There are two functions for this: =flyspell-correct-word-generic= to correct
word at point, =flyspell-correct-previous-word-generic= to correct any visible
word before point and =flyspell-correct-next-word-generic= to correct any
visible word after point. In most cases second function is more convenient (at
least in my opinion), so don't forget to bind it.

#+BEGIN_SRC emacs-lisp
(define-key flyspell-mode-map (kbd "C-;") #'flyspell-correct-previous-word-generic)
#+END_SRC

When invoked, it will show the list of corrections suggested by Flyspell. Most
interfaces also allow you to save new word to your dictionary, accept this
spelling in current buffer or for a whole session.

Default interface is implemented using =completing-read=, but it's highly
advised to use =flyspell-correct-ido= (which comes bundled with this package) or
any interface provided by following packages: =flyspell-correct-ivy=,
=flyspell-correct-helm= and =flyspell-correct-popup=.

** Using =flyspell-correct-dummy= interface

In order to use =flyspell-correct-dummy= interface you have to install
=flyspell-correct= package in any preferred way and then add following snippet
to relevant part of your =init.el= file.

#+BEGIN_SRC emacs-lisp
(require 'flyspell-correct)
(define-key flyspell-mode-map (kbd "C-;") 'flyspell-correct-previous-word-generic)
#+END_SRC

This is the only bundled interface that does not allow to save or accept current
spelling.

** Using =flyspell-correct-ido= interface

In order to use =flyspell-correct-ido= interface you have to install
=flyspell-correct= package in any preferred way and then add following snippet
to relevant part of your =init.el= file.

#+BEGIN_SRC emacs-lisp
(require 'flyspell-correct-ido)
(define-key flyspell-mode-map (kbd "C-;") 'flyspell-correct-previous-word-generic)
#+END_SRC

** Using =flyspell-correct-ivy= interface

In order to use =flyspell-correct-ivy= interface you have to install
=flyspell-correct-ivy= package in any preferred way and then add following snippet
to relevant part of your =init.el= file.

#+BEGIN_SRC emacs-lisp
(require 'flyspell-correct-ivy)
(define-key flyspell-mode-map (kbd "C-;") 'flyspell-correct-previous-word-generic)
#+END_SRC

Note that in order to access save actions in =ivy= interface you need to press
~M-o~. More on =ivy= mini buffer key bindings you can read in [[http://oremacs.com/swiper/#key-bindings-for-single-selection-action-then-exit-minibuffer][official
documentation]].

** Using =flyspell-correct-helm= interface

In order to use =flyspell-correct-helm= interface you have to install
=flyspell-correct-helm= package in any preferred way and then add following snippet
to relevant part of your =init.el= file.

#+BEGIN_SRC emacs-lisp
(require 'flyspell-correct-helm)
(define-key flyspell-mode-map (kbd "C-;") 'flyspell-correct-previous-word-generic)
#+END_SRC

** Using =flyspell-correct-popup= interface

In order to use =flyspell-correct-popup= interface you have to install
=flyspell-correct-popup= package in any preferred way and then add following snippet
to relevant part of your =init.el= file.

#+BEGIN_SRC emacs-lisp
(require 'flyspell-correct-popup)
(define-key flyspell-mode-map (kbd "C-;") 'flyspell-correct-previous-word-generic)
#+END_SRC

* Custom interfaces

One can easily implement custom interface for =flyspell-correct-word-generic= and
=flyspell-correct-previous-word-generic=. It has to be function that takes two
arguments - candidates and misspelled word. It has to return either replacement
word or ~(command, word)~ tuple that will be passed to =flyspell-do-correct=. Check
=flyspell-correct-popup= for example of interface that uses this feature.

* Auto correction mode

/Take my advice and don't use this functionality unless you find
=flyspell-correct-previous-word-generic= function useless for your purposes.
Seriously, just try named function for completion. You can find more info in
[[https://github.com/syl20bnr/spacemacs/issues/6209#issuecomment-274320376][this comment]]./

This package also provides auto correction minor mode called
=flyspell-correct-auto-mode=. When enabled it will automatically invoke
=flyspell-correct-previous-word-generic= after certain delay configured by
=flyspell-correct-auto-delay= when there is at least one misspelled word.

#+BEGIN_SRC
(add-hook 'flyspell-mode-hook #'flyspell-correct-auto-mode)
#+END_SRC

One can also configure interface specially for
=flyspell-correct-previous-word-generic= called by =flyspell-correct-auto-mode= by
setting value of =flyspell-correct-auto-mode-interface=.

* Reasoning

There are already packages like =helm-flyspell= and =flyspell-popup=. So why would
anyone create yet another similar package? The reason is simple - to support
another interface or completion system. =flyspell-correct= started because =ivy= was
missing similar to =helm-flyspell= package. But I didn't want to create a package
just for =ivy=. The reasoning is simple - all those packages should have similar
functionality but different interface. Adding something new to one if these
packages ideally should be reflected in all others. So I decided to create
generic package that works with any interfaces. It's not about one package
containing all possible interfaces, but about package that gives you
functionality with interface of your choice.

* Screenshots

** Ivy interface
 [[file:images/screenshot-ivy-1.png]]

 [[file:images/screenshot-ivy-2.png]]

** Popup interface
 [[file:images/screenshot-popup.png]]

** Helm interface
 [[file:images/screenshot-helm.png]]

* Acknowledgements

This package is available thanks to these people:

- [[https://github.com/pronobis][Andrzej Pronobis]] for inspiration and [[https://github.com/pronobis/helm-flyspell][helm-flyspell]]
- [[https://github.com/xuchunyang][xuchunyang]] for [[https://github.com/xuchunyang/flyspell-popup][flyspell-popup]]
- [[https://github.com/abo-abo][Oleh Krehel]] for [[https://github.com/abo-abo/swiper][swiper]] and all the help

Additional thanks to all contributors:

- [[https://github.com/mrBliss][mrBliss]]
- [[https://github.com/syohex][Syohei YOSHIDA]]
- [[https://github.com/vermiculus][Sean Allred]]
- [[https://github.com/manuel-uberti][Manuel Uberti]]
- [[https://github.com/jpkotta][jpkotta]]
